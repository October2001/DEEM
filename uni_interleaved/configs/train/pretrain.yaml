# Training Arguments

fp16: True
max_steps: 10000
per_device_train_batch_size: &per_device_train_batch_size 4
per_device_eval_batch_size: 2
dataloader_num_workers: &num_workers 8
data_seed: &data_seed 0
seed: 32

## optimizer & scheduler

optim: adamw_torch
learning_rate: 1.0e-4
weight_decay: 0.05
adam_beta1: 0.9
adam_beta2: 0.995
adam_epsilon: 1.0e-6
lr_for_random_params_list: [1.0e-4, 1.0e-5, 1.0e-4, 1.0e-5, 2.0e-5, 2.0e-5]
wd_for_random_params_list: [0.0, 0.0, null, null, null, null]
random_params_list: [llama_cross_attn.gate, sampling_offsets, 
                    llama_cross_attn, visual_tokenizer.encoder.unet,
                    visual_tokenizer.sniffer.vision_model.visual,
                    visual_tokenizer.sniffer.vision_model.encoder]    

lr_scheduler_type: "cosine"
warmup_steps: 1000

## evaluation & saving

evaluation_strategy: "steps"
eval_steps: 2000
save_strategy: "steps"
save_steps: 2000
save_total_limit: 5
fp16_full_eval: false

generate_mode: generate_texts

## logging

report_to: ['tensorboard']
logging_steps: 10
disable_tqdm: False
log_level: info

## misc

tf32: True
ddp_find_unused_parameters: False

## deepspeed

deepspeed: './uni_interleaved/configs/deepspeed_zero1.json'


# MODEL

model:
  freeze_llm: True
  freeze_vfm: False
  freeze_dm: True
  llm_model_path: &tokenizer_path assets/lmsys/vicuna-7b-v1.5
  # llm_model_path: &tokenizer_path assets/lmsys/vicuna-13b-v1.3
  num_img_token: &img_len 77
  cross_attention_frequency: 4

  dataset_to_ignore_noimage_cond_loss: [laion_en, laion_coco]

  visual_tokenizer_config:
    sniffer_model_path: assets/laion/CLIP-convnext_base_w_320-laion_aesthetic-s13B-b82K
    # sniffer_model_path: assets/laion/CLIP-convnext_large_d_320.laion2B-s29B-b131K-ft-soup
    # sniffer_model_path: assets/openai/clip-vit-large-patch14
    # sniffer_model_path: assets/openai/clip-vit-base-patch16

    perceiver_config:
      num_queries: 77
      hidden_size: 768
      encoder_hidden_size: 1024
      cross_attention_frequency: 2
      num_hidden_layers: 12
      num_attention_heads: 12
      qk_normalization: True
  image_decoder_config:
    pretrained_model_name_or_path: assets/stabilityai/stable-diffusion-2-1-base
    sd_base_seed: 0
    sd_use_random_seed: False
    perceiver_config:
      num_queries: 77
      hidden_size: 1024
      encoder_hidden_size: 4096
      # encoder_hidden_size: 5120
      cross_attention_frequency: 1
      num_hidden_layers: 1
      num_attention_heads: 16
      hidden_dropout_prob: 0.
      attention_probs_dropout_prob: 0.

# DATA

data:
  train:
    name: random_mix
    probs: [2.,1.]
    sampling_type: longest
    seed: *data_seed
    dataset_names: [mmc4,blip]

    datasets:

    - name: mmc4_wds
      data_root: "./datasets/mmc4/mmc4_images" # e.g. './datasets/mmc4/ai2-jackh-mmc4-gated-public-41423/images/'
      annt_root: "./datasets/mmc4/mmc4_annts" # e.g. './datasets/mmc4/ai2-jackh-mmc4-gated-public-41423/data/'
      tokenizer_path: *tokenizer_path

      per_device_batch_size: 4
      input_shards: "docs_no_face_shard_{0..23098}_v3.jsonl" # 'docs_shard_{0..23098}_v2.jsonl'
      num_samples: 20000 # e.g. 10_000
      seed: *data_seed
      num_workers: *num_workers

      num_img_token: *img_len
      max_num_images_per_seq: 15
      
      transform: &train_transform
        aug_type: 'dual_numpy'
        resolution: &image_size 256
        resolution2: &image_size_dec 512

    - name: laion_wds
      data_root: "./datasets/laion/laion_images" # e.g. './datasets/mmc4/ai2-jackh-mmc4-gated-public-41423/images/'
      annt_root: "./datasets/laion/laion_images" # e.g. './datasets/mmc4/ai2-jackh-mmc4-gated-public-41423/data/'
      tokenizer_path: *tokenizer_path

      per_device_batch_size: 4
      input_shards: "{00000..01174}.tar" # '{00000..01174}.tar'
      num_samples: 20000 # e.g. 10_000
      seed: *data_seed
      num_workers: *num_workers

      num_img_token: *img_len
      max_num_images_per_seq: 15
      
      transform: *train_transform

  val:

    - name: textvqa
      data_root: datasets/textvqa/train_images
      annt_root: datasets/textvqa
      tokenizer_path: *tokenizer_path
      collate_mode: 'generate_vqa'

      collator: VQAEvalCollator
      num_img_token: *img_len

      transform: &val_transform
        aug_type: 'dual_numpy'
        resolution: *image_size
        resolution2: *image_size_dec
        center_crop: False
        random_flip: False

    - name: okvqa
      data_root: datasets/coco
      annt_root: datasets/okvqa
      tokenizer_path: *tokenizer_path
      collate_mode: 'generate_vqa'

      collator: VQAEvalCollator
      num_img_token: *img_len


      transform: *val_transform